"use strict";(self.webpackChunkproyecto_02=self.webpackChunkproyecto_02||[]).push([[797],{5680:(e,a,n)=>{n.d(a,{xA:()=>p,yg:()=>g});var r=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=r.createContext({}),i=function(e){var a=r.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},p=function(e){var a=i(e.components);return r.createElement(s.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(n),m=t,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,c(c({ref:a},p),{},{components:n})):r.createElement(g,c({ref:a},p))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,c=new Array(o);c[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:t,c[1]=l;for(var i=2;i<o;i++)c[i]=n[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2755:(e,a,n)=>{n.r(a),n.d(a,{contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(8168),t=(n(6540),n(5680));const o={},c="Pasos",l={unversionedId:"Manual de Actualizacion/Pasos",id:"Manual de Actualizacion/Pasos",isDocsHomePage:!1,title:"Pasos",description:"1. Acceder a su instancia v\xeda SSH (esta parte ya la deben conocer).",source:"@site/docs/Manual de Actualizacion/3-Pasos.md",sourceDirName:"Manual de Actualizacion",slug:"/Manual de Actualizacion/Pasos",permalink:"/Documentacion-02/docs/Manual de Actualizacion/Pasos",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Manual de Actualizacion/3-Pasos.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Requisitos",permalink:"/Documentacion-02/docs/Manual de Actualizacion/Requisitos"},next:{title:"Comando Extra",permalink:"/Documentacion-02/docs/Manual de Actualizacion/Comando extra"}},s=[],i={toc:s},p="wrapper";function u(e){let{components:a,...o}=e;return(0,t.yg)(p,(0,r.A)({},i,o,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"pasos"},"Pasos"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Acceder a su instancia v\xeda SSH (esta parte ya la deben conocer)."),(0,t.yg)("li",{parentName:"ol"},"Loguearse como super usuario ejecute ",(0,t.yg)("strong",{parentName:"li"},"sudo su")),(0,t.yg)("li",{parentName:"ol"},"Ejecutar ",(0,t.yg)("strong",{parentName:"li"},"docker ps")," y verificar que est\xe9n al menos las siguientes l\xedneas que equivalen a los contenedores de cada servicio iniciado por docker.")),(0,t.yg)("p",null,(0,t.yg)("img",{alt:"pasos 7",src:n(1925).A})),(0,t.yg)("p",null,"En la lista deber\xe1 fijarse en los ",(0,t.yg)("strong",{parentName:"p"},"NAMES")," que contengan ",(0,t.yg)("strong",{parentName:"p"},"fpm")," y ",(0,t.yg)("strong",{parentName:"p"},"mariadb")," ya que en ellos deber\xe1 acceder. "),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"multifacturalo_fpm2_1")," equivale al nombre del proyecto donde una vez accedido se encontrar\xe1 justo en la ruta donde se ha alojado el repositorio y podr\xe1 ejecutar comandos ",(0,t.yg)("strong",{parentName:"li"},"artisan"),", ",(0,t.yg)("strong",{parentName:"li"},"git")," o ",(0,t.yg)("strong",{parentName:"li"},"composer"),". Este nombre puede variar un poco, puede llamarse ",(0,t.yg)("strong",{parentName:"li"},"multifacturalonew_fpm1_1"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"multifacturalo_mariadb2_1")," es el contenedor donde podr\xe1 acceder a mysql y utilizar comandos para ello, (desde aqu\xed no se ejecutan comandos php, artisan, git, entre otros).")),(0,t.yg)("ol",{start:4},(0,t.yg)("li",{parentName:"ol"},"Una vez ubicado el contenedor a acceder ejecute el siguiente comando:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# docker exec -ti multifacturalonew_fpm1_1 /bin/bash\n")),(0,t.yg)("p",null,"De esta manera se conectar\xe1 al contenedor, observar\xe1 una cambio en el inicio de la terminal.\n5. Si ha accedido a ",(0,t.yg)("strong",{parentName:"p"},"fpm")," entonces se debe encontrar en la ruta /var/www/html/ donde podr\xe1 ejecutar comandos de la siguiente lista (cada comando se ejecuta para situaciones distintas, mayormente no se necesitan ejecutar m\xe1s de dos comandos en una actualizaci\xf3n)"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# git pull origin master\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# git log -5\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# php artisan migrate\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# php artisan storage:link\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# php artisan config:clear\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# php artisan config:cache\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# php artisan cache:clear\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# php artisan tenancy:migrate\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# composer update\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# composer install\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# composer dumpautoload\n")),(0,t.yg)("p",null,"Si ha utilizado ",(0,t.yg)("strong",{parentName:"p"},"git pull")," debe ingresar las credenciales de GitLab, su correo y contrase\xf1a de acceso (la contrase\xf1a no se muestra en pantalla al ingresarla)"),(0,t.yg)("p",null,"Debe hacer uso de los comandos seg\xfan sea el caso, por ejemplo, posterior a un git pull que le muestre cambios en migraciones, deber\xe1 ejecutar ",(0,t.yg)("strong",{parentName:"p"},"#php artisan migrate")," y ",(0,t.yg)("strong",{parentName:"p"},"#php artisan tenancy:migrate"),", de esta manera actualizar\xe1 los campos de las bases de datos, b\xe1sicamente cada comando cumple una funci\xf3n espec\xedfica y no todos son usados cada vez que se realiza una actualizaci\xf3n.\n6. Si ha accedido a mariadb podr\xe1 hacer uso de comandos mysql \xfanicamente, al acceder deber\xe1 utilizar."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"# mysql -u root -p\n")),(0,t.yg)("p",null,"le solicitar\xe1 la contrase\xf1a la cual se encuentra en el archivo docker-compose.yml o .env dentro del proyecto, tambi\xe9n le fue entregada al momento de instalar el proyecto en su servidor, si ha utilizado los canales de Slack, estos est\xe1n mayormente en las chinchetas del canal."))}u.isMDXComponent=!0},1925:(e,a,n)=>{n.d(a,{A:()=>r});const r=n.p+"assets/images/Manual4-paso1-c0b9cc1dbd7b22a28980d30f2360e705.png"}}]);